dist: xenial
language: go

go:
- "1.12.x"

sudo: required

services:
  - docker

before_install:
  - if [ "${TRAVIS_OS_NAME}" = linux ]; then sudo apt-get -qq update; fi
  - if [ "${TRAVIS_OS_NAME}" = linux ]; then sudo apt-get -qq install btrfs-tools libdevmapper-dev libgpgme11-dev libseccomp-dev; fi
  - if [ "${TRAVIS_OS_NAME}" = linux ]; then sudo apt-get -qq install autoconf automake bison clang-format-3.9 e2fslibs-dev libfuse-dev libtool liblzma-dev gettext libsystemd-dev; fi
  - if [ "${TRAVIS_OS_NAME}" = linux ]; then sudo apt-get -qq install libc-dev linux-libc-dev; fi
  - if [ "${TRAVIS_OS_NAME}" = osx ]; then brew update && brew install gpgme; fi

before_script:
  - export PATH=$HOME/gopath/bin:$PATH
  - export LD_LIBRARY_PATH=/usr/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

env:
  global:
    - NIX_IMAGE=saschagrunert/crionix
    - CONTAINER_RUNTIME=docker
    - JOBS=4

os:
- linux
- linux-ppc64le

jobs:
  include:
    - stage: Lint
      name: git validation, clang-format, golangci-lint
      script:
        - make .gitvalidation
        - make fmt
        - make lint
      go: "1.12.x"
    - name: vendor
      script:
        - make vendor
        - hack/tree_status.sh
      go: "1.12.x"
    - stage: Test
      name: build, unit test and code coverage report
      script:
        - make mockgen -j $JOBS
        - hack/tree_status.sh
        - make testunit
        - make -j $JOBS
        - make codecov
      go: "1.12.x"
    - name: static binary build
      script:
        - make build-static CONTAINER_RUNTIME=$CONTAINER_RUNTIME NIX_IMAGE=$NIX_IMAGE
      go: "1.12.x"
    - name: cross compilation build
      script:
        - make local-cross
      go: "1.12.x"
      env: CROSS_PLATFORM=true
    - name: latest go version (tip)
      script:
        - make testunit
        - make -j $JOBS
      go: tip
    - name: macOS build and unit tests
      script:
        - make testunit
        - make -j $JOBS
      os: osx
    - stage: Integration
      name: default build
      script:
        - make integration CONTAINER_RUNTIME=$CONTAINER_RUNTIME
      go: "1.12.x"
    - name: default build with user namespace
      script:
        - make integration CONTAINER_RUNTIME=$CONTAINER_RUNTIME
      env: TEST_USERNS=1
      go: "1.12.x"
    - name: static x86_64 glibc
      script:
        - make build-static integration CONTAINER_RUNTIME=$CONTAINER_RUNTIME NIX_IMAGE=$NIX_IMAGE
      go: "1.12.x"
      env: CRIO_BINARY=crio-x86_64-static-glibc
    - name: static x86_64 musl libc
      script:
        - make build-static integration CONTAINER_RUNTIME=$CONTAINER_RUNTIME NIX_IMAGE=$NIX_IMAGE
      go: "1.12.x"
      env: CRIO_BINARY=crio-x86_64-static-musl
  allow_failures:
    - os: osx
    - go: tip
    - env: CROSS_PLATFORM=true

notifications:
  irc: "chat.freenode.net#cri-o"
